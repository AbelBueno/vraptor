right now:

- interceptor registration real support
- copyright caelum





projo

- enum support
- ContainerBasedNullHandler support (non cached instances)
- further log
- reflection fallback system on nullhandler (automatic?)
- MIRROR usage as a fallback for OGNL instantiation
- MIRROR usage everywhere
- custom converter based on locale
- better exception handling everywhere

site docs (prior to release)
- doc how to change the PathResolver algorithm
- doc how to use PageResult directly
- doc how to configure log
- faq xxx doesnt work: activate log

vraptor 2 support

- instantiate with injection
- setters/getters for value injection
- method invocation without parameters
- method invocation w parameters
- interceptor invocation

kung help

- paranamer support
- support @Path with nice urls
- support Validator
- full spring support
- concatenate convertion and validation errors
- better package for typecreators
- method addAsNext on InterceptorStack could have another name, could have been another interface (same implmementation)?










later customization (after first release)

- vraptor acceptance tests (sem integracao com servidor)
- vraptor2 component support
- vraptor2 interceptor support
- vraptor2 plugin support?
- 404 component (so its customizable)
- customizable requestexecution
- customizable error process on request execution
- hibernate validation plugin
- guice support
- hibernate plugin
- Array, Set, Collection, SortedSet, Queue, Map, SortedMap support
- generic interface support

done:
- support @Path
- ant build run tests
- cobertura report
- spring support
- invoke method
- support @Post, @...
- support Result with include
- vraptor info component
- 70% coverage
- support Result with custom views
- customizable strategies for JspView name (PathResolver)
- default strategy: resourceclass + resourcemethod
- sl4j usage
- interceptor support
- type converters
- ognl support
