right now:

	- vraptor2 component lookup algorithm

	- enum converter (ordinal and string)
	- Boolean, Double converter (wrapper)
	- BigDecimal, BigInteger converter

projo

- converters: Date, Calendar, FixedLocaleCalendar, FixedLocaleDate
- converters: jodatime
- converters WRAPPERS: , char, short, byte, float
- further log
- reflection fallback system on nullhandler (automatic?)
- MIRROR usage as a fallback for OGNL instantiation
- MIRROR usage everywhere
- better exception handling everywhere (prior)
- converters: File
- CachedConverters and others should neve register(Class), they should do it at startup and clone those pico instances if faster... check it!
- all converter erros messages should contain the original value between '' so its clear in the message if it was empty (or null)
- test that checks that the main PicoContainer is not registered... and the converters interface is also not registered so it doesnt give the same converter to two different requests 

site docs (prior to release)
- doc how to change the PathResolver algorithm
- doc how to use PageResult directly
- doc how to configure log
- faq xxx doesnt work: activate log
- note on converter lookup (injection system)... note that it might change???

vraptor 2 support

- instantiate with injection
- setters/getters for value injection
- method invocation without parameters
- method invocation w parameters
- interceptor invocation

kung help

- interceptor registration real support
- paranamer support
- support @Path with nice urls
- support Validator
- full spring support
- concatenate convertion and validation errors
- better package for typecreators
- method addAsNext on InterceptorStack could have another name, could have been another interface (same implmementation)?






right before release
	copyright in all files check




later customization (after first release)

- ContainerBasedNullHandler support (non cached instances)
- vraptor acceptance tests (sem integracao com servidor)
- vraptor2 component support
- vraptor2 interceptor support
- vraptor2 plugin support?
- 404 component (so its customizable)
- customizable requestexecution
- customizable error process on request execution
- hibernate validation plugin
- guice support
- hibernate plugin
- Array, Set, Collection, SortedSet, Queue, Map, SortedMap support
- generic interface support
- allow private/protected constructors (search for every newInstance with getConstructor and setAccessible them, work it out with pico/mirror and so on)
- allow private/protected getters/setters (ognl?)
- custom converters for specified method parameters
- setting errors during ognl expression evaluation should be defined as validation errors
- allow registering of global converters
- allows registering of specific converters (model or method based)


done:
- support @Path
- ant build run tests
- cobertura report
- spring support
- invoke method
- support @Post, @...
- support Result with include
- vraptor info component
- 70% coverage
- support Result with custom views
- customizable strategies for JspView name (PathResolver)
- default strategy: resourceclass + resourcemethod
- sl4j usage
- interceptor support
- type converters
- ognl support
